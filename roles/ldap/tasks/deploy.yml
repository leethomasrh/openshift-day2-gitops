- fail:
    msg: "Make sure we've authenticated to the cluster before running this role"
  when: k8s_auth_results.k8s_auth.api_key is not defined

- name: Ensure cluster-ops namespace exists
  k8s:
    api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
    resource_definition:
      apiVersion: project.openshift.io/v1
      kind: Project
      metadata:
        name: "{{ operation_namespace }}"
    state: present
    validate_certs: no
  register: create_project

- name: Deploy ldap oauth configuration
  k8s:
    api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
    apply: yes
    resource_definition: "{{ lookup('template', 'ldap-oauth-config.yml.j2') }}"
    validate_certs: no

- name: Deploy group sync objects
  k8s:
    api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
    apply: yes
    validate_certs: no
    resource_definition: "{{ lookup('template', 'ldap-group-sync.yml.j2') }}"

- name: Deploy ldap certs
  k8s:
    api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
    validate_certs: no
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
      data:
        ca.crt: "{{ ldap_cert }}"
  loop:
    - { name: 'ca-config-map', namespace: 'openshift-config' }
    - { name: 'ldap-ca', namespace: '{{ operation_namespace }}' }
  when: ldap_cert is defined
    
- name: Remove default self-provisioners clusterrolebinding for system:oauth users
  k8s:
    api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
    resource_definition:
      apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      metadata:
        name: self-provisioners
    state: absent
    validate_certs: no
