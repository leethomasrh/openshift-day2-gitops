#!/usr/bin/env ansible-playbook
---
# This playbook serves as a wrapper for all the functionality contained in the ansible roles
# It uses ansible tags to toggle on/off functionality
# The "never" tag is used to force the user to be explicit about what they want to do
#
# In addition to using tags to control everything the ability to toggle on/off
# functionality within the roles is controlled through providing
# -e cluster_name=<cluster name>.  For example -e cluster_name=it-test, -e cluster_name=it-lab
# -e <action>=true flags. For example: -e apply=true, -e print=true, -e teardown=true
#
- name: Administer OCP
  hosts: localhost
  become: false
  gather_facts: false
  module_defaults:
    group/k8s:
      host: https://api.{{ cluster_name }}.{{ openshift_base_domain }}:6443
  vars_files:
    - "{{ playbook_dir }}/vars/{{ cluster_name }}/vars.yml"
    - "{{ playbook_dir }}/vars/{{ cluster_name }}/vault.yml"
  tasks:
  - block:
      - name: Login
        k8s_auth:
          username: kubeadmin
          password: "{{ kube_pass }}"
          validate_certs: no
        register: k8s_auth_results
        tags:
          - gitops_operator
          - gitops_applications
          - get_co

      - name: get unique cluster identifier
        shell: >-
          oc get machinesets
          -n openshift-machine-api
          --token {{ k8s_auth_results.k8s_auth.api_key }}
          --insecure-skip-tls-verify=true
          --server=https://api.{{ cluster_name }}.{{ openshift_base_domain }}:6443
          | grep worker | cut -d- -f1-3
        register: cluster_id
        tags:
          - gitops_operator
          - gitops_applications
          - get_co
        when: k8s_auth_results.k8s_auth.api_key is defined

      - name: set unique_cluster_id fact
        set_fact: 
         openshift_unique_cluster_name: "{{ cluster_id.stdout }}"
        tags:
          - gitops_operator
          - gitops_applications
          - get_co
        when: k8s_auth_results.k8s_auth.api_key is defined

      - name: ipi install
        import_role:
          name: ipi_install
        tags:
          - never
          - ipi_install

      - name: Deploy openshift gitops operator
        import_role:
          name: gitops_operator
        tags:
          - never
          - gitops_operator 

      - name: Deploy get co 
        import_role:
          name: get_co
        tags:
          - never
          - get_co

    always:
      # Putting this in an always block ensures the sensitive information is always removed
      # The tags on this should include all configuration roles
      # Make sure to add new ones if more roles are added
    - name: If login succeded try to log out
      when: k8s_auth_results.k8s_auth.api_key is defined
      k8s_auth:
        state: absent
        api_key: "{{ k8s_auth_results.k8s_auth.api_key }}"
        validate_certs: no
      tags:
        - gitops_operator
        - gitops_applications
        - get_co
